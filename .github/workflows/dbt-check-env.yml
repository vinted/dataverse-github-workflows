name: dbt-check-env

on:
  workflow_call:
    inputs:
      env_id: 
        description: "Whether to use 'test' or 'prod' environment"
        type: string
        default: test
    secrets:
      GH_SECRET_PRIVATE_ACCESS_TOKEN:
        required: true
      GH_SECRET_PRIVATE_ACCESS_NAME:
        required: true

jobs:
  check-required-vars:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env_id }}
    steps:
      - run: |
          if [ -z ${{ secrets.GH_SECRET_PRIVATE_ACCESS_NAME }} ]; then
            echo "GH_SECRET_PRIVATE_ACCESS_NAME secret is not set or empty"
            exit 1
          fi
          if [ -z ${{ secrets.GH_SECRET_PRIVATE_ACCESS_TOKEN }} ]; then
            echo "GH_SECRET_PRIVATE_ACCESS_TOKEN secret is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.ARTIFACT_REGISTRY_HOST }} ]; then
            echo "ARTIFACT_REGISTRY_HOST variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.COMPOSER_AIRFLOW_SECRET_FILE_NAME }} ]; then
            echo "COMPOSER_AIRFLOW_SECRET_FILE_NAME variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.COMPOSER_AIRFLOW_URL }} ]; then
            echo "COMPOSER_AIRFLOW_URL variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.COMPOSER_ENVIRONMENT_NAME }} ]; then
            echo "COMPOSER_ENVIRONMENT_NAME variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.COMPOSER_GCP_PROJECT }} ]; then
            echo "COMPOSER_GCP_PROJECT variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.COMPOSER_GCS_BUCKET_NAME }} ]; then
            echo "COMPOSER_GCS_BUCKET_NAME variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.COMPOSER_LOCATION }} ]; then
            echo "COMPOSER_LOCATION variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.DBT_DEPLOY_SERVICE_ACCOUNT_EMAIL }} ]; then
            echo "DBT_DEPLOY_SERVICE_ACCOUNT_EMAIL variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.TEST_DATASET_LABEL_KEY }} ]; then
            echo "TEST_DATASET_LABEL_KEY variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.TEST_DATASET_LABEL_VALUE }} ]; then
            echo "TEST_DATASET_LABEL_VALUE variable is not set or empty"
            exit 1
          fi
          if [ -z ${{ vars.WORKLOAD_IDENTITY_PROVIDER }} ]; then
            echo "WORKLOAD_IDENTITY_PROVIDER variable is not set or empty"
            exit 1
          fi
    

