name: dbt-check-env

on:
  workflow_call:
    inputs:
      artifact_registry_host:
        type: string
        default: ${{ vars.ARTIFACT_REGISTRY_HOST }}
      composer_airflow_secret_file_name:
        type: string
        default: ${{ vars.COMPOSER_AIRFLOW_SECRET_FILE_NAME }}
      composer_airflow_url:
        type: string
        default: ${{ vars.COMPOSER_AIRFLOW_URL }}
      composer_environment_name:
        type: string
        default: ${{ vars.COMPOSER_ENVIRONMENT_NAME }}
      composer_gcp_project:
        type: string
        default: ${{ vars.COMPOSER_GCP_PROJECT }}
      composer_gcs_bucket_name:
        type: string
        default: ${{ vars.COMPOSER_GCS_BUCKET_NAME }}
      composer_location:
        type: string
        default: ${{ vars.COMPOSER_LOCATION }}
      dbt_deploy_service_account_email:
        type: string
        default: ${{ vars.DBT_DEPLOY_SERVICE_ACCOUNT_EMAIL }}
      test_dataset_label_key:
        type: string
        default: ${{ vars.TEST_DATASET_LABEL_KEY }}
      test_dataset_label_value:
        type: string
        default: ${{ vars.TEST_DATASET_LABEL_VALUE }}
      workload_identity_provider:
        type: string
        default: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
      env_id: 
        description: "valid ids: test or prod"
        type: string
        default: test
    secrets:
      GH_SECRET_PRIVATE_ACCESS_TOKEN:
        required: true
      GH_SECRET_PRIVATE_ACCESS_NAME:
        required: true

jobs:
  check-env-vars:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env_id }}
    steps:
      - run: |
          echo artifact_registry_host : ${{ inputs.artifact_registry_host }}
          if [ -z ${{ inputs.artifact_registry_host }} ]; then
            echo "ARTIFACT_REGISTRY_HOST secret is not set or empty"
            exit 1
          fi

