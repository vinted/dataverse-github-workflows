name: dbt-secret-manager-helper 

on:
  workflow_call:
    inputs:
      env_id:
        description: "Environment id, test or prod"
        required: true
        type: string
      gcp_service_account:
        description: "Email address or unique identifier of the Google Cloud service account"
        type: string
        default: ${{ vars.DV_SECRETS_SERVICE_ACCOUNT_EMAIL }}
      workload_identity_provider:
        description: "The full identifier of the Workload Identity Provider, including the project number, pool name, and provider name."
        type: string
        default: ${{ vars.DV_WORKLOAD_IDENTITY_PROVIDER }}
      gh_secret_access_name_reference:
        description: "Long reference in secret manager to github secret access name"
        type: string
        default: projects/498819875840/secrets/dv-gh-private-access-name
      gh_secret_access_token_reference:
        description: "Long reference in secret manager to github secret access token"
        type: string
        default: projects/498819875840/secrets/dv-gh-private-access-token/versions/2
    outputs:
      gh-private-access-name:
        value: ${{ jobs.get-dv-secrets.outputs.gh-private-access-name }}
      gh-private-access-token: 
        value: ${{ jobs.get-dv-secrets.outputs.gh-private-access-token }}

jobs:
  get-dv-secrets:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env_id }}
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      gh-private-access-name: ${{ steps.secrets.outputs.gh-private-access-name }}
      gh-private-access-token: ${{ steps.secrets.outputs.gh-private-access-token }}
   
    steps:
      - id: 'auth-dv'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: access_token
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account:  ${{ inputs.gcp_service_account }}
          create_credentials_file: true
          access_token_lifetime: 3600s
      - id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            gh-private-access-name:${{ inputs.gh_secret_access_name_reference }}
            gh-private-access-token:${{ inputs.gh_secret_access_token_reference }}